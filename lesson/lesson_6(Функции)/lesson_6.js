// Перепишите функцию, чтобы она делала то же самое, но без if, в одну строку.

// Сделайте два варианта функции checkAge:

// Используя оператор ?
// Используя оператор ||

// function checkAge(age) {
//     if (age > 18) {
//       return true;
//     } else {
//       return confirm('Родители разрешили?');
//     }
//   }


// function checkAge(age) {
//     return (age > 18) ? true : confirm('Родители разрешили');
// }

// function checkAge(age) {
//     return (age > 18) || confirm('Родители разрешили');
// }



// =============================


// Напишите функцию min(a,b), которая возвращает меньшее из чисел a и b.

// Пример вызовов:

// min(2, 5) == 2
// min(3, -1) == -1
// min(1, 1) == 1


// function min(a, b) {
//     if (a > b) {
//         return b;
//     }
//     else if (a < b) {
//         return a;
//     }
// }

// function min(a, b) {
//     return (a < b) ? a : b;
// }

// console.log(min(4, 1));


// Напишите функцию pow(x,n), которая возвращает x в степени n. Иначе говоря, умножает x на себя n раз и возвращает результат.

// pow(3, 2) = 3 * 3 = 9
// pow(3, 3) = 3 * 3 * 3 = 27
// pow(1, 100) = 1 * 1 * ...* 1 = 1

// Создайте страницу, которая запрашивает x и n, а затем выводит результат pow(x,n).

// P.S. В этой задаче функция обязана поддерживать только натуральные значения n, т.е. целые от 1 и выше.

// function pow(x, n) {
//     let result = x;

//     for (let i = 1; i < n; i++) {
//         result *= x;
//     }

//     return result;
// }

// let x = prompt("x?", '');
// let n = prompt("n?", '');

// if (n < 1) {
//     alert(`Степень ${n} не поддерживается, используйте натуральное число`);
// } else {
//     alert(pow(x, n));
// }
//  Решение из учебника


// function pow(x, n) {
//     let result = x ** n;

//     return result;
// }

// let x = +prompt('x', '');
// let n = +prompt('n', '');

// if (x < 1 && n < 1) {
//     alert(' Не правильно');
// }
// else {
//     alert(pow(x, n));
// }
// // Своё решение






